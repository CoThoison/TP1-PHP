/* Generated By:JavaCC: Do not edit this line. PHPVisitor.java Version 7.0.14 */
public interface PHPVisitor
{
  public void visit(SimpleNode node, int branchAdd);
  public void visit(ASTPhpPage node, int branchAdd);
  public void visit(ASTHtmlBlock node, int branchAdd);
  public void visit(ASTStatement node, int branchAdd);
  public void visit(ASTThrowStatement node, int branchAdd);
  public void visit(ASTTryBlock node, int branchAdd);
  public void visit(ASTEndOfStatement node, int branchAdd);
  public void visit(ASTEmbeddedHtml node, int branchAdd);
  public void visit(ASTDefineStatement node, int branchAdd);
  public void visit(ASTLabeledStatement node, int branchAdd);
  public void visit(ASTExpressionStatement node, int branchAdd);
  public void visit(ASTCompoundStatement node, int branchAdd);
  public void visit(ASTSelectionStatement node, int branchAdd);
  public void visit(ASTIterationStatement node, int branchAdd);
  public void visit(ASTJumpStatement node, int branchAdd);
  public void visit(ASTParameterList node, int branchAdd);
  public void visit(ASTParameter node, int branchAdd);
  public void visit(ASTClassDeclaration node, int branchAdd);
  public void visit(ASTClassMembers node, int branchAdd);
  public void visit(ASTMemberDeclaration node, int branchAdd);
  public void visit(ASTInterfaceDeclaration node, int branchAdd);
  public void visit(ASTInterfaceMembers node, int branchAdd);
  public void visit(ASTInterfaceMember node, int branchAdd);
  public void visit(ASTIncludeStatement node, int branchAdd);
  public void visit(ASTEchoStatement node, int branchAdd);
  public void visit(ASTExpression node, int branchAdd);
  public void visit(ASTLogicalTextOrExpression node, int branchAdd);
  public void visit(ASTLogicalTextXorExpression node, int branchAdd);
  public void visit(ASTLogicalTextAndExpression node, int branchAdd);
  public void visit(ASTAssignmentExpression node, int branchAdd);
  public void visit(ASTAssignmentOperator node, int branchAdd);
  public void visit(ASTConditionalExpression node, int branchAdd);
  public void visit(ASTLogical_Or_Expression node, int branchAdd);
  public void visit(ASTLogical_And_Expression node, int branchAdd);
  public void visit(ASTBitwiseOrExpression node, int branchAdd);
  public void visit(ASTBitwiseXorExpression node, int branchAdd);
  public void visit(ASTBitwiseAndExpression node, int branchAdd);
  public void visit(ASTEqualityExpression node, int branchAdd);
  public void visit(ASTRelationalExpression node, int branchAdd);
  public void visit(ASTShiftExpression node, int branchAdd);
  public void visit(ASTAdditiveExpression node, int branchAdd);
  public void visit(ASTMultiplicativeExpression node, int branchAdd);
  public void visit(ASTCastExpression node, int branchAdd);
  public void visit(ASTUnaryExpression node, int branchAdd);
  public void visit(ASTPrefixIncDecExpression node, int branchAdd);
  public void visit(ASTPostfixIncDecExpression node, int branchAdd);
  public void visit(ASTInstanceOfExpression node, int branchAdd);
  public void visit(ASTPostfixExpression node, int branchAdd);
  public void visit(ASTPrimaryExpression node, int branchAdd);
  public void visit(ASTArray node, int branchAdd);
  public void visit(ASTClassInstantiation node, int branchAdd);
  public void visit(ASTVariable node, int branchAdd);
  public void visit(ASTArgumentExpressionList node, int branchAdd);
  public void visit(ASTConstant node, int branchAdd);
  public void visit(ASTString node, int branchAdd);
  public void visit(ASTDoubleStringLiteral node, int branchAdd);
  public void visit(ASTVisibility node, int branchAdd);
}
/* JavaCC - OriginalChecksum=f96c03d6c5f143795d69fa53ccaafad5 (do not edit this line) */
